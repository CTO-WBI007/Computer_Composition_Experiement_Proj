module Display(
    input CLK,
    input [7:0] Data,
    input isResult,
    output reg[3:0] seg,
    output reg[7:0] a_to_g
);

    reg [19:0] count = 0;
    parameter T1MS = 50000;
    reg [4:0] temp = 1;
    reg [7:0] x = 7'b1000000;

    always @(posedge CLK) begin
        count <= count + 1;
        if (count == T1MS) begin
            count <= 0;
           
            if (temp == 4)
                temp <= 0;
                else
                 temp <= temp + 1;
        end

        if (isResult) begin 
            case (temp)
                0: begin x = Data / 1000; seg = 4'b0111; end
                1: begin x = Data / 100 % 10; seg = 4'b1011; end
                2: begin x = Data / 10 % 10; seg = 4'b1101; end
                3: begin x = Data % 10; seg = 4'b1110; end
            endcase
        end else begin
            case (temp)
                0: begin x = Data[7:4] / 10; seg = 4'b0111; end
                1: begin x =  Data[7:4] % 10; seg = 4'b1011; end
                2: begin x = Data[3:0] / 10; seg = 4'b1101; end
                3: begin x = Data[3:0] % 10; seg = 4'b1110; end
            endcase
        end
    end

    always @(*) begin
        case (x)
            0: a_to_g = 7'b0000001;
            1: a_to_g = 7'b1001111;
            2: a_to_g = 7'b0010010;
            3: a_to_g = 7'b0000110;
            4: a_to_g = 7'b1001100;
            5: a_to_g = 7'b0100100;
            6: a_to_g = 7'b0100000;
            7: a_to_g = 7'b0001111;
            8: a_to_g = 7'b0000000;
            9: a_to_g = 7'b0000100;
            'hA: a_to_g = 7'b0001000;
            'hB: a_to_g = 7'b1100000;
            'hC: a_to_g = 7'b0110001;
            'hD: a_to_g = 7'b1000010;
            'hE: a_to_g = 7'b0110000;
            'hF: a_to_g = 7'b0111000;
            default: a_to_g = 7'b0000001;
        endcase
    end

endmodule


